apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name | default .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: mysql-abcxzy
    app.kubernetes.io/version: {{ .Chart.appVersion }}
    app.kubernetes.io/project: "CI/CD Engineering"
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/created-by: controller-manager
    vtx-cfs/stack: green
    vtx-cfs/environment: dev
    vtx-cfs/status: live
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountname: {{ .Release.Name }}
      imagePullSecrets:
        - name: artifactory-cred
      containers:
        - name: {{ default .Release.Name }}
          image: "{{ .Values.cfs_permissions_service.image.repository }}:{{ default .Chart.appVersion .Values.image_tag }}"
          ports:
          - containerPort: {{ .Values.service.internalPort }}
          resources:
            requests:
              memory: {{ .Values.cfs_permissions_service.resources.requests.memory }}
              cpu: {{ .Values.cfs_permissions_service.resources.requests.cpu }}
            limits:
              memory: {{ .Values.cfs_permissions_service.resources.limits.memory }}
              cpu: {{ .Values.cfs_permissions_service.resources.limits.cpu }}
          readinessProbe:
            httpGet:
              path: {{ .Values.health.readinessProbe.path }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 40
            timeoutSeconds: 10
            periodSeconds: 3
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: {{ .Values.health.livenessProbe.path }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 8
            failureThreshold: 1
          env:
          - name: "DATABASE_USERNAME"
            valueFrom:
              secretKeyRef:
                key:  username
                name: {{ .Release.Name }}-auth
          - name: "DATABASE_PASSWORD"
            valueFrom:
              secretKeyRef:
                key:  password
                name: {{ .Release.Name }}-auth
          - name: "DATABASE_CONNECTION"
            value: {{ .Values.database.connection }}
          - name: "TEST_ENVIRONMENTS" #  If needed
            value: {{ .Values.<teyp of your app framework>.environments }} # Add Your app framework name example: micronaut
